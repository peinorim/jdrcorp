<?php

namespace Proxies\__CG__\JdrCorp\ElricBundle\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class Perso extends \JdrCorp\ElricBundle\Entity\Perso implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = array();



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return array('__isInitialized__', 'id', 'nom', 'proprio', 'fort', 'consti', 'taille', 'intell', 'pouvoir', 'dexte', 'apparence', 'naiss', 'sexe', 'age', 'allure', 'competences', 'sorts', 'metier', 'armes', 'armure', 'idee', 'chance', 'dexterite', 'charisme', 'modif_degats', 'pv', 'mana');
        }

        return array('__isInitialized__', 'id', 'nom', 'proprio', 'fort', 'consti', 'taille', 'intell', 'pouvoir', 'dexte', 'apparence', 'naiss', 'sexe', 'age', 'allure', 'competences', 'sorts', 'metier', 'armes', 'armure', 'idee', 'chance', 'dexterite', 'charisme', 'modif_degats', 'pv', 'mana');
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (Perso $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', array());
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', array());
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', array());

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function setNom($nom)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setNom', array($nom));

        return parent::setNom($nom);
    }

    /**
     * {@inheritDoc}
     */
    public function getNom()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getNom', array());

        return parent::getNom();
    }

    /**
     * {@inheritDoc}
     */
    public function setProprio($proprio)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setProprio', array($proprio));

        return parent::setProprio($proprio);
    }

    /**
     * {@inheritDoc}
     */
    public function getProprio()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getProprio', array());

        return parent::getProprio();
    }

    /**
     * {@inheritDoc}
     */
    public function setFort($fort)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setFort', array($fort));

        return parent::setFort($fort);
    }

    /**
     * {@inheritDoc}
     */
    public function getFort()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getFort', array());

        return parent::getFort();
    }

    /**
     * {@inheritDoc}
     */
    public function setConsti($consti)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setConsti', array($consti));

        return parent::setConsti($consti);
    }

    /**
     * {@inheritDoc}
     */
    public function getConsti()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getConsti', array());

        return parent::getConsti();
    }

    /**
     * {@inheritDoc}
     */
    public function setTaille($taille)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setTaille', array($taille));

        return parent::setTaille($taille);
    }

    /**
     * {@inheritDoc}
     */
    public function setModifDegats()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setModifDegats', array());

        return parent::setModifDegats();
    }

    /**
     * {@inheritDoc}
     */
    public function getModifDegats()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getModifDegats', array());

        return parent::getModifDegats();
    }

    /**
     * {@inheritDoc}
     */
    public function getTaille()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTaille', array());

        return parent::getTaille();
    }

    /**
     * {@inheritDoc}
     */
    public function setIntell($intell)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setIntell', array($intell));

        return parent::setIntell($intell);
    }

    /**
     * {@inheritDoc}
     */
    public function getIntell()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getIntell', array());

        return parent::getIntell();
    }

    /**
     * {@inheritDoc}
     */
    public function setPouvoir($pouvoir)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPouvoir', array($pouvoir));

        return parent::setPouvoir($pouvoir);
    }

    /**
     * {@inheritDoc}
     */
    public function getPouvoir()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPouvoir', array());

        return parent::getPouvoir();
    }

    /**
     * {@inheritDoc}
     */
    public function setDexte($dexte)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDexte', array($dexte));

        return parent::setDexte($dexte);
    }

    /**
     * {@inheritDoc}
     */
    public function getDexte()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDexte', array());

        return parent::getDexte();
    }

    /**
     * {@inheritDoc}
     */
    public function setApparence($apparence)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setApparence', array($apparence));

        return parent::setApparence($apparence);
    }

    /**
     * {@inheritDoc}
     */
    public function getApparence()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getApparence', array());

        return parent::getApparence();
    }

    /**
     * {@inheritDoc}
     */
    public function setNaiss($naiss)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setNaiss', array($naiss));

        return parent::setNaiss($naiss);
    }

    /**
     * {@inheritDoc}
     */
    public function getNaiss()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getNaiss', array());

        return parent::getNaiss();
    }

    /**
     * {@inheritDoc}
     */
    public function setSexe($sexe)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSexe', array($sexe));

        return parent::setSexe($sexe);
    }

    /**
     * {@inheritDoc}
     */
    public function getSexe()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSexe', array());

        return parent::getSexe();
    }

    /**
     * {@inheritDoc}
     */
    public function setAge($age)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setAge', array($age));

        return parent::setAge($age);
    }

    /**
     * {@inheritDoc}
     */
    public function getAge()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAge', array());

        return parent::getAge();
    }

    /**
     * {@inheritDoc}
     */
    public function setAllure($allure)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setAllure', array($allure));

        return parent::setAllure($allure);
    }

    /**
     * {@inheritDoc}
     */
    public function getAllure()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAllure', array());

        return parent::getAllure();
    }

    /**
     * {@inheritDoc}
     */
    public function setCompetences($comp)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCompetences', array($comp));

        return parent::setCompetences($comp);
    }

    /**
     * {@inheritDoc}
     */
    public function getCompetences()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCompetences', array());

        return parent::getCompetences();
    }

    /**
     * {@inheritDoc}
     */
    public function setSorts($sorts)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSorts', array($sorts));

        return parent::setSorts($sorts);
    }

    /**
     * {@inheritDoc}
     */
    public function getSorts()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSorts', array());

        return parent::getSorts();
    }

    /**
     * {@inheritDoc}
     */
    public function setMetier($metier_id)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setMetier', array($metier_id));

        return parent::setMetier($metier_id);
    }

    /**
     * {@inheritDoc}
     */
    public function getMetier()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getMetier', array());

        return parent::getMetier();
    }

    /**
     * {@inheritDoc}
     */
    public function setArmes($armes)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setArmes', array($armes));

        return parent::setArmes($armes);
    }

    /**
     * {@inheritDoc}
     */
    public function getArmes()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getArmes', array());

        return parent::getArmes();
    }

    /**
     * {@inheritDoc}
     */
    public function setArmure($armure)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setArmure', array($armure));

        return parent::setArmure($armure);
    }

    /**
     * {@inheritDoc}
     */
    public function getArmure()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getArmure', array());

        return parent::getArmure();
    }

    /**
     * {@inheritDoc}
     */
    public function getIdee()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getIdee', array());

        return parent::getIdee();
    }

    /**
     * {@inheritDoc}
     */
    public function getChance()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getChance', array());

        return parent::getChance();
    }

    /**
     * {@inheritDoc}
     */
    public function getDexterite()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDexterite', array());

        return parent::getDexterite();
    }

    /**
     * {@inheritDoc}
     */
    public function getCharisme()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCharisme', array());

        return parent::getCharisme();
    }

    /**
     * {@inheritDoc}
     */
    public function getPv()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPv', array());

        return parent::getPv();
    }

    /**
     * {@inheritDoc}
     */
    public function getMana()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getMana', array());

        return parent::getMana();
    }

    /**
     * {@inheritDoc}
     */
    public function setIdee()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setIdee', array());

        return parent::setIdee();
    }

    /**
     * {@inheritDoc}
     */
    public function setChance()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setChance', array());

        return parent::setChance();
    }

    /**
     * {@inheritDoc}
     */
    public function setDexterite()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDexterite', array());

        return parent::setDexterite();
    }

    /**
     * {@inheritDoc}
     */
    public function setCharisme()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCharisme', array());

        return parent::setCharisme();
    }

    /**
     * {@inheritDoc}
     */
    public function setPv()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPv', array());

        return parent::setPv();
    }

    /**
     * {@inheritDoc}
     */
    public function setMana()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setMana', array());

        return parent::setMana();
    }

}
